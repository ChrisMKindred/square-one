name: Client Environment Dev Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - release/1/develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      BUILD_FOLDER: ./build
      DEPLOY_FOLDER: ./deploy
      ENV: dev
      ENV_URL: ${{ secrets.DEV_URL }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      COMPOSER_AUTH: '{ "github-oauth": { "github.com": "${{ secrets.GH_TOKEN }}" } }'


    steps:
      # Get the build repository
      - name: BUILD SCM
        uses: actions/checkout@v2
        with:
          ref: ${{github.ref}}

      # Set required enviroment variables for Composer
      - name: Create .env
        run: |
          echo "${{ secrets.WP_ENV }}" > .env

      - name: Composer Build
        run: |
          composer install --ignore-platform-reqs --no-dev --optimize-autoloader

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.13.1'

      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Node Build
        run: |
          npm install gulp-cli -g
          npm install yarn
          yarn install:theme
          yarn run validate
          yarn run server_dist

    # switch to git merge deploys.


      - name: Deploy WP Core
        uses: burnett01/rsync-deployments@4.0
        with:
          switches: -rpv --delete --exclude=.git --exclude=.gitmodules  --exclude=.gitignore  --exclude=.htaccess  --exclude=wp-config.php  --exclude=wp-content --exclude=composer.json
          path: wp/
          remote_path: ${{secrets.SSH_PATH_DEV}}
          remote_host: ${{secrets.SSH_HOST}}
          remote_key: ${{secrets.SSH_KEY}}
          remote_user: ${{secrets.SSH_USER_DEV}}
          remote_port: ${{secrets.SSH_PORT_DEV}}

      - name: Deploy WP and vendor directory
        uses: burnett01/rsync-deployments@4.0
        with:
          switches: -rpv --include=vendor/*** --include=build-process.php --include=wp-content/*** --exclude=*
          remote_path: ${{secrets.SSH_PATH_DEV}}
          remote_host: ${{secrets.SSH_HOST}}
          remote_key: ${{secrets.SSH_KEY}}
          remote_user: ${{secrets.SSH_USER_DEV}}
          remote_port: ${{secrets.SSH_PORT_DEV}}

      - name: Slack Notification
        run:  |
          curl -X POST -H 'Content-type: application/json' --data "{'text':'Finished deploying ${{github.ref}} to ${{env.ENV}} -- ${{env.ENV_URL}}'}" ${{env.SLACK_WEBHOOK}}
